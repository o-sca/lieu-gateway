{
  "openapi": "3.0.3",
  "info": {
    "title": "Lieu - OpenAPI 3.0",
    "description": "Lieu services, an application where users can submit lengthy texts and have that text summarized based on the user's input. In this first iteration, we've only implemented the foundation of the service and intend to add on more quality of life features in the future. We look forward to additional help in improving the API.",
    "contact": {
      "email": "lieuservices@gmail.com"
    },
    "license": {
      "name": "Lieu © 2023 "
    },
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://stingray-app-x6rzq.ondigitalocean.app/api/v1"
    }
  ],
  "components": {
    "securitySchemes": {
      "cookieAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "lieu.sid"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "lieu@gmail.com"
          },
          "username": {
            "type": "string",
            "example": "lieu"
          },
          "password": {
            "type": "string",
            "example": "123abcABC((("
          }
        }
      },
      "UserLogin": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "john"
          },
          "password": {
            "type": "string",
            "example": "123"
          }
        }
      },
      "SummariseText": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "example": "This is a sample text"
          }
        }
      },
      "GenerateText": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "example": "This is a sample text"
          }
        }
      },
      "UserTypeRequest": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "number",
            "example": "1"
          },
          "userType": {
            "type": "string",
            "example": "ADMIN"
          }
        }
      }
    }
  },
  "security": [
    {
      "cookieAuth": []
    }
  ],
  "paths": {
    "/auth/checklogin": {
      "get": {
        "tags": ["login status check"],
        "summary": "Check login status of user",
        "description": "Check if the user is authenticated based on the provided token",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "example": {
                  "authenticated": true
                }
              }
            }
          }
        }
      }
    },
    "/auth/signup": {
      "post": {
        "tags": ["signup"],
        "summary": "Sign up for lieu services",
        "description": "Input required to create an account",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful user object creation",
            "content": {
              "application/json": {
                "example": {
                  "id": "1",
                  "userType": "USER"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "message": "Password needs 1 upper case, 1 lowercase, 1 special character and a number",
                  "isLoggedIn": false
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "example": {
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["login user"],
        "summary": "User login",
        "description": "Validate user, exchange user credentials for token",
        "requestBody": {
          "description": "Request body for user login",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation!",
            "content": {
              "application/json": {
                "example": {
                  "message": "Login successful!",
                  "user": {
                    "user_name": "lieu",
                    "email": "lieu@gmail.com",
                    "user_type": "USER"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "message": "You entered the wrong username or password!"
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "get": {
        "tags": ["logout user"],
        "summary": "User logout",
        "description": "Destroys the user's cookie/session",
        "responses": {
          "200": {
            "description": "Successful operation!",
            "content": {
              "application/json": {
                "example": {
                  "message": "Successfully logged out!"
                }
              }
            }
          },
          "500": {
            "description": "Unsuccessful response",
            "content": {
              "application/json": {
                "example": {
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/me": {
      "get": {
        "tags": ["user data"],
        "summary": "User data",
        "description": "Get user object credentials/information",
        "responses": {
          "200": {
            "description": "Successful operation!",
            "content": {
              "application/json": {
                "example": {
                  "id": "1",
                  "username": "lieu",
                  "email": "lieu@gmail.com",
                  "user_type": "USER",
                  "authenticated": true
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/ai/text/summarise": {
      "post": {
        "tags": ["Summarise Text"],
        "summary": "Summarise text",
        "description": "provide input text to be summarised",
        "requestBody": {
          "description": "Request body for text input",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SummariseText"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sucessful operation!",
            "content": {
              "application/json": {
                "example": {
                  "text_summary": "This is a summary of the text"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/ai/gen/generate": {
      "post": {
        "tags": ["Generate Text"],
        "summary": "Generate text",
        "description": "provide input text to be generated",
        "requestBody": {
          "description": "Request body for text input",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateText"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sucessful operation!",
            "content": {
              "application/json": {
                "example": {
                  "text_summary": "generated text"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/requests": {
      "get": {
        "tags": ["Get Current User Request History"],
        "summary": "Get current users request logs",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "request_id": 7,
                    "input": "After checking these points, you should be able to identify and fix the issue. If the problem persis",
                    "output": "I am a text summary",
                    "user_id": 2,
                    "createdAt": "2023-11-26T20:50:24.000Z"
                  },
                  {
                    "request_id": 12,
                    "input": "After barely surviving Thunder, Roderick lands a spot as a surgeon’s mate on the Lizard, which is sa",
                    "output": "made up text summary generated using my 2 bare hands",
                    "user_id": 2,
                    "createdAt": "2023-11-26T23:58:13.000Z"
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": ["Delete User Request By Id"],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "number"
            },
            "description": "request id"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/requests/all": {
      "get": {
        "tags": ["[ADMIN] - Get All User Request History"],
        "summary": "Get all user request logs",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "request_id": 7,
                    "input": "After checking these points, you should be able to identify and fix the issue. If the problem persis",
                    "output": "I am a text summary",
                    "user_id": 2,
                    "createdAt": "2023-11-26T20:50:24.000Z"
                  },
                  {
                    "request_id": 12,
                    "input": "After barely surviving Thunder, Roderick lands a spot as a surgeon’s mate on the Lizard, which is sa",
                    "output": "made up text summary generated using my 2 bare hands",
                    "user_id": 1,
                    "createdAt": "2023-11-26T23:58:13.000Z"
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/requests/users": {
      "get": {
        "tags": ["[ADMIN] - Get All Users"],
        "summary": "Get all users",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "user_id": 2,
                    "username": "john",
                    "userType": "USER"
                  },
                  {
                    "user_id": 1,
                    "username": "admin",
                    "userType": "ADMIN"
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/requests/log": {
      "get": {
        "tags": ["[ADMIN] - Get All Endpoint Count"],
        "summary": "Get all endpoint request count",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "path": "/api/v1/text/summarise",
                    "method": "POST",
                    "request_count": "5"
                  },
                  {
                    "path": "/api/v1/auth/me",
                    "method": "GET",
                    "request_count": "89"
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/auth/privileges": {
      "put": {
        "tags": ["[ADMIN] - Change User Privileges"],
        "summary": "Change a user's user type",
        "requestBody": {
          "description": "Request body for user privileges",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserTypeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  }
}
